// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VanRijtDataBase.Models;

#nullable disable

namespace VanRijtDataBase.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230913204229_changedEvenementVeranderingName")]
    partial class changedEvenementVeranderingName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VanRijtDataBase.Models.Adres", b =>
                {
                    b.Property<int>("AdresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HuisNummer")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Straat")
                        .HasColumnType("longtext");

                    b.HasKey("AdresID");

                    b.ToTable("Adres");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.Evenement", b =>
                {
                    b.Property<int>("EvenementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AdresID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Eind")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventNaam")
                        .HasColumnType("longtext");

                    b.Property<int>("MaxBezoekers")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("EvenementID");

                    b.HasIndex("AdresID");

                    b.HasIndex("UserID");

                    b.ToTable("Evenement");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.EvenementData", b =>
                {
                    b.Property<int>("EvenementDataID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EvenementID")
                        .HasColumnType("int");

                    b.Property<int>("Instroom")
                        .HasColumnType("int");

                    b.Property<int>("Tempratuur")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Tijd")
                        .HasColumnType("time(6)");

                    b.Property<int>("Uitstroom")
                        .HasColumnType("int");

                    b.Property<int>("Weer")
                        .HasColumnType("int");

                    b.HasKey("EvenementDataID");

                    b.HasIndex("EvenementID");

                    b.ToTable("EvenementData");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.EvenementVeranderingen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EvenementID")
                        .HasColumnType("int");

                    b.Property<string>("Notitie")
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("Tijd")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("EvenementID");

                    b.ToTable("EvenementVeranderingen");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("UserType")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("LoginID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BedrijfsNaam")
                        .HasColumnType("longtext");

                    b.Property<int?>("LoginID")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext");

                    b.Property<string>("TelefoonNummer")
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.HasIndex("LoginID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.Evenement", b =>
                {
                    b.HasOne("VanRijtDataBase.Models.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresID");

                    b.HasOne("VanRijtDataBase.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Adres");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.EvenementData", b =>
                {
                    b.HasOne("VanRijtDataBase.Models.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("EvenementID");

                    b.Navigation("Evenement");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.EvenementVeranderingen", b =>
                {
                    b.HasOne("VanRijtDataBase.Models.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("EvenementID");

                    b.Navigation("Evenement");
                });

            modelBuilder.Entity("VanRijtDataBase.Models.User", b =>
                {
                    b.HasOne("VanRijtDataBase.Models.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginID");

                    b.Navigation("Login");
                });
#pragma warning restore 612, 618
        }
    }
}
